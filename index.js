const output = document.getElementById("output");

function showFunction(title, explanation, code, result, question, answer) {
  const block = document.createElement("section");
  block.className = "function-block";

  block.innerHTML = `
    <h2><span class="material-icons" aria-hidden="true">code</span> ${title}</h2>
    <p class="description">${explanation}</p>
    <pre class="code">${code}</pre>
    <div class="result">üñ•Ô∏è Output: <code>${result}</code></div>
    <div class="question">‚ùì ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: ${question}</div>
    <div class="answer">üí° ‡¶â‡¶§‡ßç‡¶§‡¶∞: ${answer}</div>
  `;

  output.appendChild(block);
}

function findCourseById(courses, id) {
  return courses.find(course => course.course_id === id);
}
const allCourses = [
  { course_id: "1", title: "HTML" },
  { course_id: "2", title: "CSS" },
  { course_id: "3", title: "JavaScript" },
];
const courseFound = findCourseById(allCourses, "2");
showFunction(
  "findCourseById",
  "‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶á‡¶°‡¶ø ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡•§",
  `function findCourseById(courses, id) {
  return courses.find(course => course.course_id === id);
}

findCourseById(allCourses, "2")`,
  JSON.stringify(courseFound),
  "‡¶ï‡ßÄ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?",
  "‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø courses ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶§‡ßá find() ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá course_id ‡¶Æ‡¶ø‡¶≤‡¶ø‡ßü‡ßá ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¶‡ßá‡ßü‡•§"
);

function countLectures(course) {
  return course.chapters.reduce((total, chapter) => {
    return total + chapter.chapterContent.length;
  }, 0);
}
const course1 = {
  chapters: [
    {
      chapterTitle: "Intro",
      chapterContent: [{ title: "Welcome" }, { title: "Overview" }],
    },
    {
      chapterTitle: "Basics",
      chapterContent: [{ title: "Variables" }],
    },
  ],
};
showFunction(
  "countLectures",
  "‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∞ ‡¶≤‡ßá‡¶ï‡¶ö‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ó‡ßã‡¶®‡ßá‡•§",
  `function countLectures(course) {
  return course.chapters.reduce((total, chapter) => {
    return total + chapter.chapterContent.length;
  }, 0);
}

countLectures(course1)`,
  countLectures(course1),
  "‡¶ï‡ßá‡¶® reduce ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞?",
  "reduce ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶¨ chapters ‡¶è‡¶∞ lecture ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§"
);

function totalCourseMinutes(course) {
  let total = 0;
  course.chapters.forEach(chapter => {
    chapter.chapterContent.forEach(lecture => {
      total += lecture.lectureDuration;
    });
  });
  return total;
}
const course2 = {
  chapters: [
    {
      chapterContent: [
        { title: "Intro", lectureDuration: 5 },
        { title: "Welcome", lectureDuration: 10 },
      ],
    },
    {
      chapterContent: [
        { title: "Variables", lectureDuration: 15 },
        { title: "Functions", lectureDuration: 20 },
      ],
    },
  ],
};
showFunction(
  "totalCourseMinutes",
  "‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶≤‡ßá‡¶ï‡¶ö‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶Æ‡ßü (‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá) ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡•§",
  `function totalCourseMinutes(course) {
  let total = 0;
  course.chapters.forEach(chapter => {
    chapter.chapterContent.forEach(lecture => {
      total += lecture.lectureDuration;
    });
  });
  return total;
}

totalCourseMinutes(course2)`,
  totalCourseMinutes(course2),
  "‡¶ï‡ßá‡¶® forEach?",
  "forEach ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø lectureDuration ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü total ‡¶è‡•§"
);

function getFinalPrice(price, discount) {
  return ((price * (100 - discount)) / 100).toFixed(2);
}
showFunction(
  "getFinalPrice",
  "‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ï‡ßá‡¶ü‡ßá ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá (‡¶¶‡¶∂‡¶Æ‡¶ø‡¶ï‡¶∏‡¶π)‡•§",
  `function getFinalPrice(price, discount) {
  return ((price * (100 - discount)) / 100).toFixed(2);
}

getFinalPrice(100, 25)`,
  getFinalPrice(100, 25),
  "‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?",
  "‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∂‡¶§‡¶æ‡¶Ç‡¶∂ ‡¶ï‡¶Æ‡¶ø‡ßü‡ßá ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶≠‡¶æ‡¶ó ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡ß® ‡¶¶‡¶∂‡¶Æ‡¶ø‡¶ï‡ßá ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßá‡•§"
);

function toggleChapter(currentIndex, clickedIndex) {
  return currentIndex === clickedIndex ? null : clickedIndex;
}
showFunction(
  "toggleChapter",
  "‡¶è‡¶ï‡¶á ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü, ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ê ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§",
  `function toggleChapter(currentIndex, clickedIndex) {
  return currentIndex === clickedIndex ? null : clickedIndex;
}

toggleChapter(2, 2)
toggleChapter(1, 2)`,
  `toggleChapter(2,2) => ${toggleChapter(2, 2)}\ntoggleChapter(1,2) => ${toggleChapter(1, 2)}`,
  "‡¶ï‡ßá‡¶® ‡¶è‡¶Æ‡¶® ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?",
  "‡¶è‡¶ï‡¶á ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá null ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá (‡¶¨‡¶®‡ßç‡¶ß), ‡¶®‡¶æ ‡¶π‡¶≤‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶¶‡ßá‡ßü (‡¶ñ‡ßã‡¶≤‡¶æ)‡•§"
);

function formatDuration(minutes) {
  const h = Math.floor(minutes / 60);
  const m = minutes % 60;
  return `${h > 0 ? `${h}h ` : ""}${m}m`;
}
showFunction(
  "formatDuration",
  "‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶ì ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá‡¶∞ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßá‡•§",
  `function formatDuration(minutes) {
  const h = Math.floor(minutes / 60);
  const m = minutes % 60;
  return \`\${h > 0 ? \`\${h}h \` : ""}\${m}m\`;
}

formatDuration(125)
formatDuration(50)`,
  `formatDuration(125) => ${formatDuration(125)}\nformatDuration(50) => ${formatDuration(50)}`,
  "‡¶ï‡ßá‡¶® ‡¶è‡¶á ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü?",
  "‡¶Ø‡¶¶‡¶ø ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡ß¶ ‡¶π‡ßü ‡¶§‡¶¨‡ßá ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü ‡¶®‡¶æ, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§"
);

function countFreePreviews(course) {
  let count = 0;
  course.chapters.forEach(ch => {
    ch.chapterContent.forEach(lec => {
      if (lec.isFreePreview) count++;
    });
  });
  return count;
}
const course3 = {
  chapters: [
    {
      chapterContent: [
        { lectureTitle: "Intro", isFreePreview: true },
        { lectureTitle: "Setup", isFreePreview: false },
      ]
    },
    {
      chapterContent: [
        { lectureTitle: "Basics", isFreePreview: true }
      ]
    }
  ]
};
showFunction(
  "countFreePreviews",
  "‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶´‡ßç‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶ø‡¶≠‡¶ø‡¶â ‡¶≤‡ßá‡¶ï‡¶ö‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ó‡ßã‡¶®‡ßá‡•§",
  `function countFreePreviews(course) {
  let count = 0;
  course.chapters.forEach(ch => {
    ch.chapterContent.forEach(lec => {
      if (lec.isFreePreview) count++;
    });
  });
  return count;
}

countFreePreviews(course3)`,
  countFreePreviews(course3),
  "‡¶ï‡ßá‡¶® ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞?",
  "‡¶ï‡ßá‡¶®‡¶®‡¶æ, ‡¶´‡ßç‡¶∞‡¶ø ‡¶≤‡ßá‡¶ï‡¶ö‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶π‡ßü‡•§"
);
